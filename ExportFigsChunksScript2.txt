
```{r}
ex1.site <- Agg[which(Agg$SubOccSeqLoc=='CH-186-A'),]
ex1.site_NoOvlp <- Agg_NoOvlp[which(Agg_NoOvlp$SubOccSeqLoc=='CH-186-A'),]

ex1 <- spda(site = ex1.site$SubOccSeqLoc,  
                      ID = ex1.site$AggID, 
                      ph.sites = ex1.site$AggSite,
                      ph.periods = ex1.site$Period,
                      cer.type = ex1.site_NoOvlp$Period,
                      ct = ex1.site_NoOvlp$Tot.Assemb,
                      start = ex1.site_NoOvlp$Begin,
                      start.era = ex1.site_NoOvlp$Begin.era,
                      end = ex1.site_NoOvlp$End,
                      end.era = ex1.site_NoOvlp$End.era,
                      pop.ests = ex1.site$Population, 
                      pc.input = PC.mat,
                      obs.input = ex1.site$Tot.Assemb,
                      interval=1,
                      cutoff = 0.05,
                      min.period = 25, 
                      pc.method = "input", 
                      method = "mean.obs",
                      alpha = ex1.site_NoOvlp$param1,
                      beta = ex1.site_NoOvlp$param2)

plt = spda.ggplot(ex1, method="mean.obs", 
                   pc.method="input", 
                   legend_position = "top", 
                   PopLogScale = F, 
                   xlabels = MyLabs, 
                   xbreaks = MyBreaks, 
                   Pert.plot = F,
                   yaxtitle = "Occupational Probability")

plt2 = spda.ggplot(ex1, method="mean.obs", 
                   pc.method="input", 
                   legend_position = "top", 
                   PopLogScale = T, 
                   xlabels = MyLabs, 
                   xbreaks = MyBreaks, 
                   Pert.plot = F,
                   yaxtitle = "Occupational Probability")

plt = plt + labs(title = "Chronologically Refined Settlement Population Time Series", subtitle="S. Basin of Mexico Site CH-186-A (500 BC - AD 1520)", y = "Occupational Probability") + theme(axis.text.x=element_blank(), axis.title.x=element_blank(), plot.caption = element_blank(), axis.title.y = element_text(color="black", size=12, face="bold"))
plt2 = plt2 + labs(y = "Occupational Probability") + theme(legend.position = "none",plot.title = element_blank(), plot.subtitle = element_blank(), axis.title.y = element_text(color="black", size=12, face="bold"))

plot_grid(plt, plt2, align = "v", nrow = 2, rel_heights = c(1/2, 1/2))


plt = spda.ggplot(ex1, method="mean.obs", 
                   pc.method="input", 
                   legend_position = c(0.01,0.99), 
                   PopLogScale = T, 
                   xlabels = MyLabs, 
                   xbreaks = MyBreaks, 
                   Pert.plot = F,
                   yaxtitle = "Occupational Probability")

plt = plt + labs(title = "'Chronologically Refined' Settlement Population Time Series", subtitle="S. Basin of Mexico; Site CH-186-A (500 BC - AD 1520)", y = "Occupational Probability") + theme(plot.caption = element_blank(), axis.title.y = element_text(color="black", size=12, face="bold"))
plt

```












```{r, 'Bayesian Data', echo=FALSE, include=FALSE, message=FALSE, warning=FALSE}

## Determine whether you want Popularity Curve Variant #1 or #2
#### IF VARIANT #1
PC = PC.mat2
#### IF VARIANT #2
# PC = PC.mat

sites <- unique(Agg_NoOvlp$SubOccSeqLoc)

out.list <- list()

for (i in 1:length(sites)){
     
  site.qv <- Agg[which(Agg$SubOccSeqLoc==sites[i]),]
  site.qv_NoOvlp <- Agg_NoOvlp[which(Agg_NoOvlp$SubOccSeqLoc==sites[i]),]
  
  app.out <- spda(site = site.qv$SubOccSeqLoc,  
                      ID = site.qv$AggID, 
                      ph.sites = site.qv$AggSite,
                      ph.periods = site.qv$Period,
                      cer.type = site.qv_NoOvlp$Period,
                      ct = site.qv_NoOvlp$Tot.Assemb,
                      start = site.qv_NoOvlp$Begin,
                      start.era = site.qv_NoOvlp$Begin.era,
                      end = site.qv_NoOvlp$End,
                      end.era = site.qv_NoOvlp$End.era,
                      pop.ests = site.qv$Population, 
                      pc.input = PC,
                      obs.input = site.qv$Tot.Assemb,
                      interval=1,
                      cutoff = 0.05,
                      min.period = 25, 
                      pc.method = "input", 
                      method = "bayesian",
                      alpha = site.qv_NoOvlp$param1,
                      beta = site.qv_NoOvlp$param2)
  out.list[[i]] <- app.out

}
 
out.tbl = bind_rows(out.list)

out.tbl <- out.tbl[order(out.tbl$AggID),]
AggB <- Agg[order(Agg$AggID),]
identical(AggB$AggSite, out.tbl$AggSite)
identical(AggB$AggID, out.tbl$AggID)
colnames(out.tbl) <- c("AggID","SubOccSeqLoc", "AggSite", "Period", "PeriodInterval", "PeriodBegin", "PeriodBegin.era", "PeriodMidpoint", 
"PeriodMidpoint.era", "PeriodEnd", "PeriodEnd.era", "PeriodLength", "Prior.s2", "Conditional.s2", "Posterior.s2", "Population.s2", "Log_Population.s2", "ApportAssemb.s2", "r12_Pert.s2")
out.tbl <- out.tbl %>% select(-SubOccSeqLoc,-Period, -AggSite)


namez <- c("Population","PopDens","UrbanScale","UrbanPop","RuralPop", "PctUrban","PctRural")

for (i in 1:length(namez)){
  names(AggB)[names(AggB) == namez[i]] <- paste0(namez[i],".s1")
}

#AggB <- AggB %>% select(-PeriodLength,-PeriodBegin,-PeriodEnd)
#AggB = AggB[,-c(43:56)]
AggB2 <- left_join(AggB,out.tbl,by="AggID")

#Agg2 <- cbind(Agg,out.tbl)

rm(out.list, out.tbl, sites, site.qv_NoOvlp, app.out, site.qv, out.list, sites, Agg)

UrbanThresh = 1500

AggB2 <- AggB2 %>% rowwise() %>% mutate(
              UrbanPop.s2 = ifelse(Population.s2 > 1500, Population.s2 - UrbanThresh, 0),
              RuralPop.s2 = ifelse(Population.s2 < 1500, Population.s2, UrbanThresh)) %>%
       ungroup() %>% mutate(
              PopDens.s2 = Population.s2 / Area_ha,
              UrbanScale.s2 = Population.s2 / UrbanThresh,
              PctUrban.s2 = UrbanPop.s2 / Population.s2,
              PctRural.s2 = RuralPop.s2 / Population.s2)

AggB2$Method <- "Bayesian"
AggA2 <- Agg2
AggA2$Method <- "MeanOccuProb"
colnames(AggB2) <- colnames(AggA2)
MethodCompare.df = rbind(AggA2,AggB2)


 grouped_ggbetweenstats(
  data = MethodCompare.df,
  x = Method,
  y = MeanOccuProb.s2,
  grouping.var = PeriodType,
  xlab = "SPDA Method",
  ylab = "Probability (Posterior or MeanOccuProb)",
  annotation.args = list(title = "Occupational Probabilities by SPDA Method and Period Type", subtitle="Overlap/Transition Periods vs Main Ceramic Complex Phases")
)

```






```{r, 'Figure Scripts', echo=FALSE, include=FALSE, message=FALSE, warning=FALSE}

ggplot(Agg2,aes(x=Population.s1,y=Population.s2,color=Period)) + 
  geom_point() + 
  geom_abline(slope=1, intercept = 0) +
  labs(title="Step #1 vs. New Step #2 Population Estimates",
       y="New Step #2 Population", 
       x = "Step #1 Population") + 
  theme_bw()+
  theme(axis.text.x = element_text(face="bold", color="black"), 
          axis.text.y = element_text(face="bold", color="black"), 
          axis.title.x = element_text(color="black", size=12, face="bold"),
          axis.title.y = element_text(color="black", size=12, face="bold"),
          legend.justification=c(0,1), legend.position="right",
          legend.title = element_text(face = "bold"),
          legend.key.size = unit(0.8,"line"),legend.spacing.y = unit(0.2,"line"), 
          legend.key = element_rect(colour = "transparent", fill = "white"), 
          plot.title = element_text(hjust = 0.5, face="bold", size=14))

Agg21 <- Agg2
Agg21$Log_Population.s1 <- log(Agg21$Population.s1)
ggscatterstats(
  data = Agg21, ## dataframe from which variables are taken
  x = Log_Population.s1, ## predictor/independent variable
  y = Log_Population.s2, ## dependent variable
  xlab = "Log Population, Step 2", ## label for the x-axis
  ylab = "Log Population, Step 1", ## label for the y-axis
  xfill = "#CC79A7", ## fill for marginals on the x-axis
  yfill = "#009E73", ## fill for marginals on the y-axis
  title = "Step #1 vs. New Step #2 Population Estimates"
)

##############################################

Agg212 <- Agg21 %>% group_by(SubOccSeqLoc) %>% summarize(
  count = n(),
  Length = sum(PeriodLength),
  maxPop = max(Population.s2),
  sumPop = sum(Population.s2))

hist(Agg212$count)
hist(Agg212$Length)

h1 = ggplot(Agg212, aes(count)) +
  geom_histogram(color = "#000000", fill = "#0099F8", bins = 9) +
  labs(x = "Modelling Periods (n)", y = "Frequency") +
  theme_classic()+
  theme(axis.title.x = element_text(color="black", size=14, face="bold"),
        axis.title.y = element_text(color="black", size=14, face="bold"),
        axis.text.y = element_text(face="bold", color="black", size=12),
        axis.text.x = element_text(face="bold", color="black", size=12))

h2 = ggplot(Agg212, aes(Length)) +
  geom_histogram(color = "#000000", fill = "orangered", bins = 9) +
  labs(x = "Length of Occupation (Years)", y = "Frequency") +
  theme_classic()+
  theme(axis.title.x = element_text(color="black", size=14, face="bold"),
        axis.title.y = element_text(color="black", size=14, face="bold"),
        axis.text.y = element_text(face="bold", color="black", size=12),
        axis.text.x = element_text(face="bold", color="black", size=12))
  
plot_row <- plot_grid(h1, h2)

title <- ggdraw() + 
  draw_label(
    "SubOccSeqLoc Site Occupational Duration in the SBOM",
    fontface = 'bold',
    x = 0.5,
    hjust = 0.5
  ) +
  theme(
    # add margin on the left of the drawing canvas,
    # so title is aligned with left edge of first plot
    plot.margin = margin(0, 0, 0, 7)
  )
plot_grid(
  title, plot_row,
  ncol = 1,
  # rel_heights values control vertical title margins
  rel_heights = c(0.1, 1)
)

######################################################

Agg21 %>% group_by(SubOccSeqLoc) %>% summarize(
  varpop = var(Log_Population.s2),
  sdpop = sd(Log_Population.s2)) %>%
ggplot(aes(varpop)) +
  geom_histogram(color = "#000000", fill = "orchid", bins = 15) +
  labs(x = "St.Dev Population", y = "Frequency") +
  theme_classic()+
  theme(axis.title.x = element_text(color="black", size=14, face="bold"),
        axis.title.y = element_text(color="black", size=14, face="bold"),
        axis.text.y = element_text(face="bold", color="black", size=12),
        axis.text.x = element_text(face="bold", color="black", size=12))

hpop = Agg21 %>% filter(Population.s2 > 1499) %>% 
  group_by(SubOccSeqLoc) %>% summarize(
  p1000 = n(),
  l1000 = sum(PeriodLength))


h3 = ggplot(hpop, aes(p1000)) +
  geom_histogram(color = "#000000", fill = "aquamarine", bins = 7) +
  labs(x = "Num Periods with Pop > 1500", y = "Frequency") +
  theme_classic()+
  theme(axis.title.x = element_text(color="black", size=12, face="bold"),
        axis.title.y = element_text(color="black", size=14, face="bold"),
        axis.text.y = element_text(face="bold", color="black", size=12),
        axis.text.x = element_text(face="bold", color="black", size=12))

h4 = ggplot(hpop, aes(l1000)) +
  geom_histogram(color = "#000000", fill = "bisque", bins = 11) +
  labs(x = "Length of Periods with Pop > 1500", y = "Frequency") +
  theme_classic()+
  theme(axis.title.x = element_text(color="black", size=12, face="bold"),
        axis.title.y = element_text(color="black", size=14, face="bold"),
        axis.text.y = element_text(face="bold", color="black", size=12),
        axis.text.x = element_text(face="bold", color="black", size=12))

plot_row <- plot_grid(h3, h4)

title <- ggdraw() + 
  draw_label(
    "SubOccSeqLoc Site Urban Pop Duration in the SBOM",
    fontface = 'bold',
    x = 0.5,
    hjust = 0.5
  ) +   theme(plot.margin = margin(0, 0, 0, 7))
subtitle <- ggdraw() + 
  draw_label(
    "n = 40 (of 1417)",
    fontface = 'bold',
    x = 0.5,
    hjust = 0.5,
    size=12
  ) +   theme(plot.margin = margin(0, 0, 0, 7))
plot_grid(
  title, subtitle, plot_row,
  ncol = 1,
  # rel_heights values control vertical title margins
  rel_heights = c(0.1, 0.05, 1)
)

########################################################


MyBreaks2 <- sort(c(MP2[1:16,6],MyBreaks[1:17]))
MyLabs2 = c("1600 BC", "EF", "1150 BC","EF_MF" ,"1000 BC","MF" ,"500 BC", "MF_LF" ,"400 BC", "LF" ,"200 BC", "LF_TF" ,"100 BC", "TF" ,"AD 1" , "TF_CL"  ,"AD 100", "CL" ,"AD 550", "CL_ET","AD 650", "ET" ,"AD 850", "ET_LTAzI" ,"AD 950", "LTAzI" ,"AD 1200","LTAzI_EA" ,"AD 1250","EA" ,"AD 1350", "EA_LA" ,"AD 1475")

MP2$Width = MP2$Length/2
Agg21b = left_join(Agg21,MP2[,c(3,5:8)],by="Period")

weight=Width^2

df_mean <- Agg21b %>% filter(PeriodNum<17) %>% mutate(End=as.numeric(End)) %>%
  group_by(End) %>% 
  summarize(average = mean(r12_Pert.s2)) %>%
  ungroup()
library(hrbrthemes)

Agg21b %>% filter(PeriodNum<17) %>% #mutate(End=as.numeric(End)) %>% 
  ggplot() + 
  geom_boxplot(mapping = aes(x=End, y=r12_Pert.s2, group=End), width=50,alpha=0.6)+
  geom_point(data = df_mean, 
             mapping = aes(x = End, y = average),
             color="blue") +
  geom_line(data = df_mean, 
            mapping = aes(x =End, y = average, group=1),color="blue")+
  geom_hline(yintercept=0, color="red",linetype = "dashed")+
  scale_x_continuous(limits= c(-1650,1500),breaks = MyBreaks, labels = MyLabs)+
  #theme_ipsum() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color="black", size=9), 
          axis.text.y = element_text(color="black"), 
          axis.title.x = element_text(color="black", size=14, face="bold"),
          axis.title.y = element_text(color="black", size=14, face="bold"))


df_mean <- Agg21b %>% filter(PeriodNum<17) %>% 
  group_by(PeriodNum) %>% 
  summarize(average = mean(r12_Pert.s2)) %>%
  ungroup()

labz = c("EF\nto\nEF_MF",       "EF_MF\nto\nMF",    "MF\nto\nMF_LF",       "MF_LF\nto\nLF",    "LF\n to\nLF_TF",       "LF_TF\nto\nTF",    "TF\nto\nTF_CL",       "TF_CL\nto\nCL",    "CL\nto\nCL_ET",      
"CL_ET\nto\nET",    "ET\nto\nET_LTAzI",       "ET_LTAzI\nto\nLTAzI", "LTAzI\nto\nLTAzI_EA",    "LTAzI_EA\n to\nEA", "EA\nto\nEA_LA",       "EA_LA\nto\nLA")  

Agg21b %>% filter(PeriodNum<17) %>% #mutate(End=as.numeric(End)) %>% 
  ggplot() + 
  geom_boxplot(mapping = aes(x=as.factor(PeriodNum), y=r12_Pert.s2))+
  geom_point(data = df_mean, 
             mapping = aes(x = PeriodNum, y = average),
             color="blue") +
  geom_hline(yintercept=0, color="red",linetype = "solid", size=1)+
  geom_line(data = df_mean, 
            mapping = aes(x =PeriodNum, y = average, group=1),color="blue", size=1.2)+
  scale_x_discrete(labels = labz)+
  labs(title="Projected Exponential Population Growth Rate Between Periods",x= "Time Period", y="Popularion Growth Rates (Pe^rt)")+
  theme_ipsum() +
  theme(axis.text.x = element_text(color="black", size=9), 
          axis.text.y = element_text(color="black"), 
          axis.title.x = element_text(color="black", size=16, face="bold"),
          axis.title.y = element_text(color="black", size=12, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold",size=14))

###########################################################
df_mean <- Agg21b %>% 
  group_by(PeriodNum) %>% 
  summarize(average = mean(Log_Population.s2)) %>%
  ungroup()

labz = c("EF",       "EF_MF",    "MF",       "MF_LF",    "LF",       "LF_TF",    "TF",       "TF_CL",    "CL",      
"CL_ET",    "ET",       "ET_LTAzI", "LTAzI",    "LTAzI_EA", "EA",       "EA_LA", "LA")  

Agg21b %>% 
  ggplot() + 
  geom_boxplot(mapping = aes(x=as.factor(PeriodNum), y=Log_Population.s2))+
  geom_point(data = df_mean, 
             mapping = aes(x = PeriodNum, y = average),
             color="blue") +
  #geom_hline(yintercept=0, color="red",linetype = "solid", size=1)+
  geom_line(data = df_mean, 
            mapping = aes(x =PeriodNum, y = average, group=1),color="blue", size=1.2)+
  scale_x_discrete(labels = labz)+
  labs(title="Log Population of Settlements Over Time",x= "Time Period", y="Log Population")+
  theme_ipsum() +
  theme(axis.text.x = element_text(color="black", size=9), 
          axis.text.y = element_text(color="black"), 
          axis.title.x = element_text(color="black", size=16, face="bold"),
          axis.title.y = element_text(color="black", size=12, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold",size=14))

#######################################################################
Agg21b = left_join(Agg21,MP2[,c(1,3,5:8)],by="Period")

library(ineq)

Q <- Agg21b %>% 
  mutate(
    Grow = ifelse(r12_Pert.s2 > 0, 1, 0),
    Decline = ifelse(r12_Pert.s2 < 0, 1, 0)) %>% 
  group_by(PeriodNum, Period, Begin,End,Mid,Length) %>% 
  summarize(
    Sites = n(),
    Pop = sum(Population.s2),
    LogPop = log(sum(Population.s2)),
    UrbPop = sum(UrbanPop.s2),
    LogUrbPop = log(sum(UrbanPop.s2)),
    UrbRatio = UrbPop/Pop,
    MeanPopdens = mean(PopDens.s2),
    GiniPop = ineq(Population.s2, type = "Gini", na.rm = TRUE),
    AtkinsonPop = ineq(Population.s2, type = "Atkinson", na.rm = TRUE),
    TheilPop = ineq(Population.s2, type = "Theil", na.rm = TRUE),
    LAsymPop = Lasym(Population.s2),
    MeanPop = Pop/Sites,
    MeanPert = mean(r12_Pert.s2, na.rm=T),
    Persist.n = sum(Persist),
    Found.n = sum(Found),
    FoundInit.n = sum(FoundInit),
    Abandon.n = sum(Abandon),
    Persist.Pct = Persist.n/Sites,
    Found.Pct = Found.n/Sites,
    FoundInit.Pct = FoundInit.n/Sites,
    Abandon.Pct = Abandon.n/Sites,
    Persist.Pop = sum((Persist*Population.s2)),
    Found.Pop = sum((Found*Population.s2)),
    FoundInit.Pop = sum((FoundInit*Population.s2)),
    Abandon.Pop = sum((Abandon*Population.s2)),
    Persist.PctPop = Persist.Pop/Pop,
    Found.PctPop = Found.Pop/Pop,
    FoundInit.PctPop = FoundInit.Pop/Pop,
    Abandon.PctPop = Abandon.Pop/Pop,
    Persist.PopMean = Persist.Pop/Persist.n,
    Found.PopMean = Found.Pop/Found.n,
    FoundInit.PopMean = FoundInit.Pop/FoundInit.n,
    Abandon.PopMean = Abandon.Pop/Abandon.n,
    Grow.n = sum(Grow),
    Decline.n = sum(Decline), 
    Grow.Pct = Grow.n/Sites,
    Decline.Pct = Decline.n/Sites, 
    Grow.Pop = sum((Grow*Population.s2)),
    Decline.Pop = sum((Decline*Population.s2)), 
    Grow.PctPop = Grow.Pop/Pop,
    Decline.PctPop = Decline.Pop/Pop,
    Grow.PopMean = Grow.Pop/Grow.n,
    Decline.PopMean = Decline.Pop/Decline.n) %>% ungroup()
  
#Urban growth rate
#Pop growth rate
Q$TotPop_r12_Pert <- NA
Q$UrbPop_r12_Pert <- NA
for (i in 1:(nrow(Q)-1)) {
   Q$TotPop_r12_Pert[i] <- ((Q$Pop[i+1]/Q$Pop[i])^(1/(abs((Q$Mid[i]) - (Q$Mid[i+1])))))-1
}
for (i in 1:(nrow(Q)-1)) {
   Q$UrbPop_r12_Pert[i] <- ((Q$UrbPop[i+1]/Q$UrbPop[i])^(1/(abs((Q$Mid[i]) - (Q$Mid[i+1])))))-1
}


library(corrplot)

col12 <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))

M = Q[-17,] %>% select(-(Period:Mid), -LogUrbPop, -(Found.PopMean:Abandon.PopMean), -Grow.PopMean, -UrbPop_r12_Pert) %>% cor(.)

p.mat = cor.mtest(M) 

corrplot(M, method="color", col=col12(200), type="upper", order="hclust", 
         addCoef.col = "black", # Add coefficient of correlation
         tl.col="black", tl.srt=45, #Text label color and rotation
         # Combine with significance
         p.mat = p.mat$p, sig.level = 0.2, #insig = "blank", 
         # hide correlation coefficient on the principal diagonal
         diag=FALSE, tl.cex=0.5, number.cex=0.5)


unloadNamespace("corrplot")
detach("package:corrplot")







```


```{r, 'Figure Scripts', echo=FALSE, include=FALSE, message=FALSE, warning=FALSE}


MyBreaks2 <- sort(c(MP2[1:16,6],MyBreaks[1:17]))
MyLabs2 = c("1600 BC", "EF", "1150 BC","EF_MF" ,"1000 BC","MF" ,"500 BC", "MF_LF" ,"400 BC", "LF" ,"200 BC", "LF_TF" ,"100 BC", "TF" ,"AD 1" , "TF_CL"  ,"AD 100", "CL" ,"AD 550", "CL_ET","AD 650", "ET" ,"AD 850", "ET_LTAzI" ,"AD 950", "LTAzI" ,"AD 1200","LTAzI_EA" ,"AD 1250","EA" ,"AD 1350", "EA_LA" ,"AD 1475")

MP2$Width = MP2$Length/2
Agg2b = left_join(Agg2,MP2[,c(3,5:8)],by="Period")



df_mean <- Agg2b %>% filter(PeriodNum<17) %>% 
  group_by(PeriodNum) %>% 
  summarize(average = mean(r12_Pert.s2)) %>%
  ungroup()

labz = c("EF\nto\nEF_MF",       "EF_MF\nto\nMF",    "MF\nto\nMF_LF",       "MF_LF\nto\nLF",    "LF\n to\nLF_TF",       "LF_TF\nto\nTF",    "TF\nto\nTF_CL",       "TF_CL\nto\nCL",    "CL\nto\nCL_ET",      
"CL_ET\nto\nET",    "ET\nto\nET_LTAzI",       "ET_LTAzI\nto\nLTAzI", "LTAzI\nto\nLTAzI_EA",    "LTAzI_EA\n to\nEA", "EA\nto\nEA_LA",       "EA_LA\nto\nLA")  
library(hrbrthemes)
Agg2b %>% filter(PeriodNum<17) %>% #mutate(End=as.numeric(End)) %>% 
  ggplot() + 
  geom_boxplot(mapping = aes(x=as.factor(PeriodNum), y=r12_Pert.s2))+
  geom_point(data = df_mean, 
             mapping = aes(x = PeriodNum, y = average),
             color="blue") +
  geom_hline(yintercept=0, color="red",linetype = "solid", size=1)+
  geom_line(data = df_mean, 
            mapping = aes(x =PeriodNum, y = average, group=1),color="blue", size=1.2)+
  scale_x_discrete(labels = labz)+
  labs(title="Projected Exponential Population Growth Rate Between Periods",x= "Time Period", y="Popularion Growth Rates (Pe^rt)")+
  theme_ipsum() +
  theme(axis.text.x = element_text(color="black", size=9), 
          axis.text.y = element_text(color="black"), 
          axis.title.x = element_text(color="black", size=16, face="bold"),
          axis.title.y = element_text(color="black", size=12, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold",size=14))

###########################################################
df_mean <- Agg2b %>% 
  group_by(PeriodNum) %>% 
  summarize(average = mean(Log_Population.s2)) %>%
  ungroup()

labz = c("EF",       "EF_MF",    "MF",       "MF_LF",    "LF",       "LF_TF",    "TF",       "TF_CL",    "CL",      
"CL_ET",    "ET",       "ET_LTAzI", "LTAzI",    "LTAzI_EA", "EA",       "EA_LA", "LA")  

Agg2b %>% 
  ggplot() + 
  geom_boxplot(mapping = aes(x=as.factor(PeriodNum), y=Log_Population.s2))+
  geom_point(data = df_mean, 
             mapping = aes(x = PeriodNum, y = average),
             color="blue") +
  #geom_hline(yintercept=0, color="red",linetype = "solid", size=1)+
  geom_line(data = df_mean, 
            mapping = aes(x =PeriodNum, y = average, group=1),color="blue", size=1.2)+
  scale_x_discrete(labels = labz)+
  labs(title="Log Population of Settlements Over Time",x= "Time Period", y="Log Population")+
  theme_ipsum() +
  theme(axis.text.x = element_text(color="black", size=9), 
          axis.text.y = element_text(color="black"), 
          axis.title.x = element_text(color="black", size=16, face="bold"),
          axis.title.y = element_text(color="black", size=12, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold",size=14))

#######################################################################
Agg2b = left_join(Agg2,MP2[,c(1,3,5:8)],by="Period")

library(ineq)

Q <- Agg2b %>% 
  mutate(
    Grow = ifelse(r12_Pert.s2 > 0, 1, 0),
    Decline = ifelse(r12_Pert.s2 < 0, 1, 0)) %>% 
  group_by(PeriodNum, Period, Begin,End,Mid,Length) %>% 
  summarize(
    Sites = n(),
    Pop = sum(Population.s2),
    LogPop = log(sum(Population.s2)),
    UrbPop = sum(UrbanPop.s2),
    LogUrbPop = log(sum(UrbanPop.s2)),
    UrbRatio = UrbPop/Pop,
    MeanPopdens = mean(PopDens.s2),
    GiniPop = ineq(Population.s2, type = "Gini", na.rm = TRUE),
    AtkinsonPop = ineq(Population.s2, type = "Atkinson", na.rm = TRUE),
    TheilPop = ineq(Population.s2, type = "Theil", na.rm = TRUE),
    LAsymPop = Lasym(Population.s2),
    MeanPop = Pop/Sites,
    MeanPert = mean(r12_Pert.s2, na.rm=T),
    Persist.n = sum(Persist),
    Found.n = sum(Found),
    FoundInit.n = sum(FoundInit),
    Abandon.n = sum(Abandon),
    Persist.Pct = Persist.n/Sites,
    Found.Pct = Found.n/Sites,
    FoundInit.Pct = FoundInit.n/Sites,
    Abandon.Pct = Abandon.n/Sites,
    Persist.Pop = sum((Persist*Population.s2)),
    Found.Pop = sum((Found*Population.s2)),
    FoundInit.Pop = sum((FoundInit*Population.s2)),
    Abandon.Pop = sum((Abandon*Population.s2)),
    Persist.PctPop = Persist.Pop/Pop,
    Found.PctPop = Found.Pop/Pop,
    FoundInit.PctPop = FoundInit.Pop/Pop,
    Abandon.PctPop = Abandon.Pop/Pop,
    Persist.PopMean = Persist.Pop/Persist.n,
    Found.PopMean = Found.Pop/Found.n,
    FoundInit.PopMean = FoundInit.Pop/FoundInit.n,
    Abandon.PopMean = Abandon.Pop/Abandon.n,
    Grow.n = sum(Grow),
    Decline.n = sum(Decline), 
    Grow.Pct = Grow.n/Sites,
    Decline.Pct = Decline.n/Sites, 
    Grow.Pop = sum((Grow*Population.s2)),
    Decline.Pop = sum((Decline*Population.s2)), 
    Grow.PctPop = Grow.Pop/Pop,
    Decline.PctPop = Decline.Pop/Pop,
    Grow.PopMean = Grow.Pop/Grow.n,
    Decline.PopMean = Decline.Pop/Decline.n) %>% ungroup()


  
#Urban growth rate
#Pop growth rate
Q$TotPop_r12_Pert <- NA
Q$UrbPop_r12_Pert <- NA
for (i in 1:(nrow(Q)-1)) {
   Q$TotPop_r12_Pert[i] <- ((Q$Pop[i+1]/Q$Pop[i])^(1/(abs((Q$Mid[i]) - (Q$Mid[i+1])))))-1
}
for (i in 1:(nrow(Q)-1)) {
   Q$UrbPop_r12_Pert[i] <- ((Q$UrbPop[i+1]/Q$UrbPop[i])^(1/(abs((Q$Mid[i]) - (Q$Mid[i+1])))))-1
}



QL = Q %>% pivot_longer(
    cols = Sites:UrbPop_r12_Pert,
    names_to = "Metric",
    values_to = "Value",
    values_drop_na = F)

QL2a <- QL %>% filter(Metric == "Pop"|Metric =="UrbPop") %>% mutate(Line = "Pop &\nUrban Pop", Value=Value*3)

QL2b <- QL %>% filter(Metric == "LogPop"|Metric =="LogUrbPop") %>% mutate(Line = "Log Pop &\nUrban Pop", Value = ifelse(!is.finite(Value),0,Value*5000))

QL2c <- QL %>% filter(Metric == "GiniPop") %>% mutate(Line = "Gini Pop", Value=Value*200000)

QL2d <- QL %>% filter(Metric == "Persist.PctPop") %>% mutate(Line = "Persisting &\nFounded\n%Pop", Value=Value*200000)

QL2e <- QL %>% filter(Metric == "Found.PctPop") %>% mutate(Line = "Persisting &\nFounded\n%Pop", Value=Value*200000)

QL2f <- QL %>% filter(Metric == "Abandon.PctPop") %>% mutate(Line = "Abandoned\n%Pop", Value=Value*200000)

QL2g <- QL %>% filter(Metric == "UrbRatio") %>% mutate(Line = "Urbanization\nRatio", Value=Value*250000)

QL2 <- rbind(QL2a,  QL2c, QL2d, QL2e, QL2f, QL2g)#QL2b,

QL2 <- QL2 %>%
  mutate(Line = fct_relevel(Line, levels = "Gini Pop", "Urbanization\nRatio", "Abandoned\n%Pop", "Persisting &\nFounded\n%Pop", "Pop &\nUrban Pop"))


ggplot(QL2, aes(Mid,Value,  fill=Metric)) + 
  geom_ridgeline(aes(y=Line, height=Value), color="black",alpha=0.5, scale=.000004, min_height=-Inf) +
  geom_vline(data=MP, aes(xintercept = years), linetype = "dashed", alpha=0.6)+
  labs(title="Time Series of Regional-Scale Variables", subtitle = "Southern Basin of Mexico", x ="Years BC/AD", y = "Metric")+
  scale_y_discrete(expand = c(0.01, 0)) +
  scale_x_continuous(limits= c(-1400,1520),breaks = MyBreaks,labels = MyLabs) +
  theme_bw()+
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color="black", size=9), 
        axis.text.y = element_text(color="black", face="bold"), 
        axis.title.x = element_text(color="black", size=14, face="bold"),
        axis.title.y = element_text(color="black", size=14, face="bold"),
        plot.title = element_text(hjust = 0.5, face="bold", size=16), 
        plot.subtitle = element_text(hjust = 0.5, face="bold", size=14))



library(corrplot)

col12 <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))

M = Q[-17,] %>% select(-(Period:Mid), -LogUrbPop, -(Found.PopMean:Abandon.PopMean), -Grow.PopMean, -UrbPop_r12_Pert) %>% cor(.)

p.mat = cor.mtest(M) 

corrplot(M, method="color", col=col12(200), type="upper", order="hclust", 
         addCoef.col = "black", # Add coefficient of correlation
         tl.col="black", tl.srt=45, #Text label color and rotation
         # Combine with significance
         p.mat = p.mat$p, sig.level = 0.2, #insig = "blank", 
         # hide correlation coefficient on the principal diagonal
         diag=FALSE, tl.cex=0.5, number.cex=0.5)


unloadNamespace("corrplot")
detach("package:corrplot")







```
